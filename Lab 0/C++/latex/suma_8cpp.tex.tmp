\hypertarget{suma_8cpp}{}\section{suma.\+cpp File Reference}
\label{suma_8cpp}\index{suma.\+cpp@{suma.\+cpp}}
{\ttfamily \#include $<$stdio.\+h$>$}\\*
{\ttfamily \#include $<$iostream$>$}\\*
Include dependency graph for suma.\+cpp\+:
% FIG 0
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
float \hyperlink{suma_8cpp_acda09b8c72ceee96283ce32e936a8f62}{sumar} (int a, char $\ast$$\ast$b)
\item 
int \hyperlink{suma_8cpp_a3c04138a5bfe5d72780bb7e82a18e627}{main} (int argc, char $\ast$$\ast$argv)
\end{DoxyCompactItemize}


\subsection{Function Documentation}
\index{suma.\+cpp@{suma.\+cpp}!main@{main}}
\index{main@{main}!suma.\+cpp@{suma.\+cpp}}
\subsubsection[{\texorpdfstring{main(int argc, char $\ast$$\ast$argv)}{main(int argc, char **argv)}}]{\setlength{\rightskip}{0pt plus 5cm}int main (
\begin{DoxyParamCaption}
\item[{int}]{argc, }
\item[{char $\ast$$\ast$}]{argv}
\end{DoxyParamCaption}
)}\hypertarget{suma_8cpp_a3c04138a5bfe5d72780bb7e82a18e627}{}\label{suma_8cpp_a3c04138a5bfe5d72780bb7e82a18e627}
Funcion principal que corre el programa. 
\begin{DoxyCode}
1 *float result= sumar(argc, argv);
2     printf("%.6f\(\backslash\)n",result);
3     return 0;
\end{DoxyCode}
 \begin{DoxyReturn}{Returns}
Devuelve un 0 para mostrar que todo se corrio bien.
\end{DoxyReturn}
\index{suma.\+cpp@{suma.\+cpp}!sumar@{sumar}}
\index{sumar@{sumar}!suma.\+cpp@{suma.\+cpp}}
\subsubsection[{\texorpdfstring{sumar(int a, char $\ast$$\ast$b)}{sumar(int a, char **b)}}]{\setlength{\rightskip}{0pt plus 5cm}float sumar (
\begin{DoxyParamCaption}
\item[{int}]{a, }
\item[{char $\ast$$\ast$}]{b}
\end{DoxyParamCaption}
)}\hypertarget{suma_8cpp_acda09b8c72ceee96283ce32e936a8f62}{}\label{suma_8cpp_acda09b8c72ceee96283ce32e936a8f62}
Funcion para sumar argumentos 
\begin{DoxyCode}
1 for (int i=1;i<a;i++) \{
2     float num;
3     sscanf(b[i], "%f", &num);
4     suma+=num; 
5   \}
6   return suma;
\end{DoxyCode}
 
\begin{DoxyParams}{Parameters}
{\em num} & Variable para guardar temporalmente cada argumento ingresado para sumarse. \\
\hline
{\em suma} & Variable la cual recibe y guarda el resultado de la suma de la fila de argumentos $\ast$ ingresados. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Funcion devuelve el resultado de la suma
\end{DoxyReturn}
